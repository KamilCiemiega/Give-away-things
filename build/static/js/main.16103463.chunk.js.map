{"version":3,"sources":["components/Firebase/context.js","components/store/actions/giveStuffForms.js","components/store/actions/actionsTypes.js","components/Home/HomeComponents/HomeLoginPanel.js","components/store/actions/logOut.js","components/Home/HomeComponents/HomeNavigation.js","components/Home/HomeComponents/HomeHero.js","components/Home/HomeComponents/HomeColumn.js","components/Home/HomeComponents/HomeThreeColmns.js","components/SectionTitle/SectionTitle.js","components/Home/HomeComponents/HomeEasySteps.js","components/Home/HomeComponents/HomeAbout.js","components/Home/HomeComponents/HomeWhoWeHelp.js","components/store/actions/pagination.js","components/Home/HomeComponents/HomeContactForm.js","components/store/actions/contact.js","components/Home/Home.js","components/Registration/LogIn.js","components/store/actions/logIn.js","components/Registration/Registry.js","components/store/actions/registry.js","components/Registration/Logout.js","components/GiveStuff/GiveStuffComponents/GiveStuffHeader.js","components/GiveStuff/GiveStuffComponents/GiveStuffFirstForm.js","components/GiveStuff/GiveStuffComponents/GiveStuffSecondForm.js","components/GiveStuff/GiveStuffComponents/GiveStuffThirdForm.js","components/GiveStuff/GiveStuffComponents/GiveStuffFourthForm.js","components/GiveStuff/GiveStuffComponents/GiveStuffSummary.js","components/GiveStuff/GiveStuffComponents/GiveStuffConfirm.js","components/GiveStuff/GiveStuff.js","App.js","serviceWorker.js","components/Firebase/firebase.js","components/Firebase/auth.js","components/store/reducers/pagination.js","components/store/reducers/contact.js","components/store/reducers/registry.js","components/store/reducers/logIn.js","components/store/reducers/logOut.js","components/store/reducers/giveStuffForms.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","toggleClass","val","type","active","nextPage","number","previewPage","LoginPanel","logoutHandler","doSignOut","this","auth","onAuthStateChanged","authUser","onlogOutSuccess","logged","email","className","to","onClick","notLogged","connect","state","logOut","dispatch","data","Navigation","smooth","offset","duration","Hero","homeColumn","title","body","homeThreeColumns","HomeColumn","SectionTitle","children","homeEasySteps","name","homeAbout","HomeWhoWeHelp","loadStatus","items","currentPage","todosPerPage","currentView","foundationsList","currentTodos","map","element","index","key","mission","organizationsList","collectionsList","buildButtons","foundationsButtons","i","push","id","handleClick","organizationsButtons","e","onBuildButtons","target","db","ref","on","snapshot","onLoadList","errorObject","setState","console","log","code","prevProps","prevState","onActiveView","onFundationsView","onOrganizationsView","oncollectionsView","pag","status","ready","actionCreators","onBuildList","view","activeView","currentButton","elem","HomeContactForm","initialValues","message","validate","values","errors","test","length","onSubmit","setSubmitting","resetForm","onSendData","touched","handleChange","handleBlur","handleSubmit","isSubmitting","htmlFor","placeholder","onChange","onBlur","value","disabled","con","fetch","method","headers","JSON","stringify","then","resp","json","home","HomeEasySteps","HomeAbout","LogIn","logInUser","password","doSignInWithEmailAndPassword","history","catch","error","onlogInError","HomeNavigation","class","logIn","logInError","err","withRouter","Registry","registryUser","doCreateUserWithEmailAndPassword","onregistryError","secondPassword","reg","regError","logout","GiveStuffHeader","HomeLoginPanel","GiveStuffFirstForm","selectedOption","onFirstFormValue","onNextPage","pageNr","formsVal","firstFormValue","GiveStuffSecondForm","currentValue","onToggleClass","bags","onSecondFormValue","onPreviewPage","secondFormValue","GiveStuffThirdForm","location","whoHelp","optional","onThirdFormValue","thirdFormValue","GiveStuffFourth","validationSchema","Yup","shape","street","required","city","zipCode","phoneNumber","hour","notes","onFourthFormValue","fourthFormValue","GiveStuffSummary","componentDidMount","price","slice","dataArray","Object","keys","k","formLastValue","newArr","sendDataToFirebase","thirdFormValues","item","firsFormValue","giveStuffConfirm","GiveStuff","warningDescription","nextForm","GiveStuffFourthForm","GiveStuffConfirm","currentStep","App","exact","path","component","Home","Logout","Boolean","window","hostname","match","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","app","initializeApp","database","initialState","reducer","action","concat","indexOfLastTodo","indexOfFirstTodo","rootReducer","combineReducers","pagination","contact","registry","giveStuffForms","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","thunk","ReactDOM","render","Provider","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.16103463.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n      {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n  );\r\n  \r\nexport default FirebaseContext;","import * as actionTypes from './actionsTypes'\r\n\r\nexport const firstFormValue = (val) => {\r\n    return {\r\n        type: actionTypes.FIRST_FORM_VALUE,\r\n        firstFormValue: val\r\n    }\r\n}\r\n\r\nexport const secondFormValue = (val) => {\r\n    return {\r\n        type: actionTypes.SECOND_FORM_VALUE,\r\n        secondFormValue: val\r\n    }\r\n}\r\n\r\nexport const toggleClass = (val) => {\r\n    return {\r\n        type: actionTypes.TOGGLE_CLASS,\r\n        active: val\r\n    }\r\n}\r\nexport const thirdFormValue = (val) => {\r\n    return {\r\n        type: actionTypes.THIRD_FORM_VALUE,\r\n        thirdFormValue: val\r\n    }\r\n}\r\n\r\nexport const fourthFormValue = (val) => {\r\n    return {\r\n        type: actionTypes.FOURTH_FORM_VALUE,\r\n        fourthFormValue:val\r\n    }\r\n}\r\n\r\nexport const nextPage = (number) => {\r\n    return {\r\n        type:actionTypes.NEXT_PAGE,\r\n        nextPage:number\r\n    }\r\n}\r\nexport const previewPage = (number) => {\r\n    return {\r\n        type:actionTypes.PREVIEW_PAGE,\r\n        previewPage:number\r\n    }\r\n}","export const LOAD_LIST = \"LOAD_LIST\";\r\nexport const BUILD_LIST = \"BUILD_LIST\";\r\nexport const ACTIVE_VIEW = \"ACTIVE_VIEW\";\r\nexport const BUILD_BUTTONS = \"BUILD_BUTTONS\";\r\nexport const FUNDATIONS_VIEW = \"FUNDATIONS_VIEW\";\r\nexport const ORGANIZATIONS_VIEW = \"ORGANIZATIONS_VIEW\";\r\nexport const COLLECTIONS_VIEW = \"COLLECTIONS_VIEW\";\r\nexport const SEND_DATA_START = \"SEND_DATA_START\";\r\nexport const DATA_STATUS = \"DATA_STATUS\";\r\nexport const REGISTRY_ERROR = \"REGISTRY_ERROR\";\r\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const FIRST_FORM_VALUE = \"FIRST_FORM_VALUE\";\r\nexport const SECOND_FORM_VALUE = \"SECOND_FORM_VALUE\";\r\nexport const TOGGLE_CLASS = \"TOGGLE_CLASS\";\r\nexport const THIRD_FORM_VALUE = \"THIRD_FORM_VALUE\";\r\nexport const FOURTH_FORM_VALUE = \"FOURTH_FORM_VALUE\";\r\nexport const NEXT_PAGE = \"NEXT_PAGE\";\r\nexport const PREVIEW_PAGE = \"PREVIEW_PAGE\";\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withFirebase } from '../../Firebase/context';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../store/actions/index';\r\n\r\nclass LoginPanel extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.firebase.auth.onAuthStateChanged(authUser => {\r\n            this.props.onlogOutSuccess(authUser);\r\n        });\r\n    }\r\n\r\n    logoutHandler = () => {\r\n        this.props.firebase.doSignOut();\r\n    };\r\n\r\n    render() {\r\n        const logged =\r\n            <ul>\r\n                <li>{`Cześć ${this.props.authUser?.email}`}</li>\r\n                <li><Link className=\"link\" to='/oddajrzeczy'>Oddaj rzeczy</Link></li>\r\n                <li><Link className=\"link\" to='/wylogowano' onClick={this.logoutHandler}>Wyloguj się</Link></li>\r\n            </ul>\r\n        const notLogged =\r\n            <ul>\r\n                <li><Link className=\"link\" to='/logowanie'>Zaloguj</Link></li>\r\n                <li><Link className=\"link\" to='/rejestracja'>Załóż konto</Link></li>\r\n            </ul>\r\n\r\n        return (\r\n            <div className=\"loginPanel\">\r\n                {this.props.authUser ? logged : notLogged}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        authUser: state.logOut.authUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onlogOutSuccess: (data) => dispatch(actionCreators.logOutSuccess(data))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withFirebase(LoginPanel));","import * as actionTypes from './actionsTypes'\r\n\r\nexport const logOutSuccess = (authUser) => {\r\n    return{\r\n        type: actionTypes.LOGOUT_SUCCESS,\r\n        authUser:authUser\r\n    }\r\n}","import React from \"react\";\r\nimport { Link } from 'react-scroll';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction Navigation() {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li className=\"link\"> \r\n                    <NavLink\r\n                        to=\"/\"\r\n                        smooth={\"true\"}\r\n                        offset={-70}\r\n                        duration={500}\r\n                        className=\"link\">\r\n                        Start\r\n                    </NavLink>\r\n                </li>\r\n                <li className=\"link\">\r\n                    <Link\r\n                        to=\"HomeEasySteps\"\r\n                        smooth={\"true\"}\r\n                        offset={-70}\r\n                        duration={500}>\r\n                        O co chodzi?\r\n                    </Link>\r\n                </li>\r\n                <li className=\"link\">\r\n                    <Link\r\n                        to=\"about\"\r\n                        smooth={\"true\"}\r\n                        offset={-70}\r\n                        duration={500}>\r\n                        O nas\r\n                    </Link>\r\n                </li>\r\n                <li className=\"link\">Fundacja i organizacje</li>\r\n                <li className=\"link\">\r\n                    <Link to=\"contact\"\r\n                        smooth={\"true\"}\r\n                        offset={-70}\r\n                        duration={500}>\r\n                        Kontakt\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Hero() {\r\n        return (\r\n            <header className=\"hero\">\r\n                <div className=\"hero__image\"></div>\r\n                <div className=\"hero__emptySpace\"></div>\r\n                <div className=\"hero__welcomeBox\">\r\n                    <h1>Zacznij pomagać!</h1>\r\n                    <span>Oddaj niechciane rzeczy w zaufane ręce</span>\r\n                    <div className=\"hero__welcomeBox__decoration\"></div>\r\n                    <div className=\"hero__welcomeBox__btns\">\r\n                        <Link to=\"/logowanie\" className=\"link\"><div className=\"flex\">ODDAJ RZECZY</div></Link>\r\n                        <Link to =\"/rejestracja\" className=\"link\"><div className=\"flex\">ZORGANIZUJ ZBIÓRKĘ</div></Link>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        )\r\n}\r\n\r\nexport default Hero;","import React from 'react';\r\n\r\nconst homeColumn = (props) => {\r\n    return(\r\n        <div className=\"column\">\r\n                <div className=\"column__number\">{props.number}</div>\r\n                <div className=\"column__title\">{props.title}</div>\r\n                <div className=\"column__description\">{props.body}</div>\r\n            </div>\r\n    );\r\n} \r\n\r\nexport default homeColumn;","import React from 'react';\r\nimport HomeColumn from './HomeColumn';\r\n\r\nconst homeThreeColumns = (props) => {\r\n    return (\r\n        <div className=\"columns\">\r\n            <div className=\"container\">\r\n                <HomeColumn number='10' title='ODDANYCH WORKÓW' body='Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.' />\r\n                <HomeColumn number='5' title='WSPARTYCH ORGANIZACJI' body='Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.' />\r\n                <HomeColumn number='7' title='ZORGANIZOWANYCH ZBIÓREK' body='Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.' />\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default homeThreeColumns;","import React from \"react\";\r\n\r\nfunction SectionTitle(props) {\r\n        return (\r\n            <div className=\"steps flex\">\r\n                <span className=\"steps__title\">\r\n                    {props.children}\r\n                </span>\r\n                <span className=\"steps__decoration\"></span>\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default SectionTitle;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport SectionTitle from '../../SectionTitle/SectionTitle';\r\n\r\n\r\nconst homeEasySteps = (props) => {\r\n    return (\r\n        <div className=\"container__home__easy__steps\" name=\"HomeEasySteps\">\r\n            <SectionTitle>Wystarczą 4 proste kroki</SectionTitle>\r\n            <div className='home__easy__steps' >\r\n                <div className=\"home__easy__steps__column\">\r\n                    <div className='home__easy__steps__column__img1'></div>\r\n                    <div>Wybierz rzeczy</div>\r\n                    <div></div>\r\n                    <div>ubrania, zabawki, sprzęt i inne</div>\r\n                </div>\r\n                <div className=\"home__easy__steps__column\">\r\n                    <div className='home__easy__steps__column__img2'></div>\r\n                    <div>Spakuj je</div>\r\n                    <div></div>\r\n                    <div>skorzystaj z worków na śmieci</div>\r\n                </div>\r\n                <div className=\"home__easy__steps__column\">\r\n                    <div className='home__easy__steps__column__img3'></div>\r\n                    <div>Zdecyduj komu chcesz pomóc</div>\r\n                    <div></div>\r\n                    <div>wybierz zaufane miejsce</div>\r\n                </div>\r\n                <div className=\"home__easy__steps__column\">\r\n                    <div className='home__easy__steps__column__img4'></div>\r\n                    <div>Zamów kuriera</div>\r\n                    <div></div>\r\n                    <div>kurier przyjedzie w dogodnym terminie</div>\r\n                </div>\r\n            </div>\r\n            <Link to=\"/logowanie\"><button>ODDAJ RZECZY</button></Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default homeEasySteps;","import React from 'react';\r\nimport SecionTitle from '../../SectionTitle/SectionTitle'\r\nconst homeAbout = (props) => {\r\n    return(\r\n        <div name=\"about\" className=\"about flex\">\r\n                <div className=\"about__text flex\">\r\n                    <SecionTitle>O nas</SecionTitle>\r\n                    <div className=\"about__text__description\">Lorem ipsum dolor sit amet, tempor incididunt. Ut exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate.</div>\r\n                    <div className=\"about__text__image\"></div>\r\n                </div>\r\n                <div className=\"about__image\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default homeAbout;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withFirebase } from '../../Firebase/context';\r\nimport SectionTite from '../../SectionTitle/SectionTitle';\r\nimport * as actionCreators from '../../store/actions/index';\r\n\r\n\r\nclass HomeWhoWeHelp extends Component {\r\n\r\n    state = {\r\n        loadStatus: 'init',\r\n        items: [],\r\n        currentPage: 1,\r\n        todosPerPage: 3,\r\n        currentView: 0\r\n    }\r\n    componentDidMount() {\r\n        const ref = this.props.firebase.db.ref('foundations')\r\n        ref.on(\"value\", (snapshot) => {\r\n            // this.setState({ items: snapshot.val(), loadStatus: 'ready' });\r\n            this.props.onLoadList(snapshot.val(),'ready')\r\n            // this.props.onBuildList(snapshot.val(), 'ready')\r\n        }, function (errorObject) {\r\n            this.setState({ loadStatus: 'error' })\r\n            console.log(\"The read failed: \" + errorObject.code);\r\n        });\r\n    }\r\n    componentDidUpdate (prevProps,prevState) {\r\n        if (prevState.loadStatus !== this.props.loadStatus) {\r\n            // return this.props.onBuildList()\r\n        }\r\n    }\r\n\r\n    // fetchData = (name, start =0, end = 3) => {\r\n    //     fetch(`http://localhost:3005/organizations/?fundacja=${name}&_start=${start}&_end=${end}`)\r\n    //         .then(res => res.json())\r\n    //         .then(data => {\r\n    //             this.setState({\r\n    //                 items: data,\r\n    //            //     description: data.description\r\n    //             })\r\n    //         })\r\n    // }\r\n\r\n    foundationsList = () => {\r\n         const list = this.props.currentTodos.map((element, index) => {\r\n            return (\r\n                <div key={index} className=\"whowehelp__container__text__list\">\r\n                    <ul>\r\n                        <li>{element.name}</li>\r\n                        <li className=\"whowehelp__container__text__list__mission\">{element.mission}</li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        })\r\n        return list;\r\n    }\r\n    organizationsList = () => {\r\n        const list = this.props.currentTodos.map((element, index) => {\r\n            return (\r\n                <div key={index} className=\"whowehelp__container__text__list\">\r\n                    <ul>\r\n                        <li>{element.name}</li>\r\n                        <li className=\"whowehelp__container__text__list__mission\">{element.mission}</li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        })\r\n        return list;\r\n    }\r\n    collectionsList = () => {\r\n        // const { items, currentPage, todosPerPage } = this.state;\r\n        // const indexOfLastTodo = currentPage * todosPerPage;\r\n        // const indexOfFirstTodo = indexOfLastTodo - todosPerPage;\r\n        // const currentTodos = items.slice(indexOfFirstTodo, indexOfLastTodo);\r\n        const list = this.props.currentTodos.map((element, index) => {\r\n            return (\r\n                <div key={index} className=\"whowehelp__container__text__list\">\r\n                    <ul>\r\n                        <li>{element.name}</li>\r\n                        <li className=\"whowehelp__container__text__list__mission\">{element.mission}</li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        })\r\n        return list;\r\n    }\r\n\r\n    buildButtons = () => {\r\n        let foundationsButtons = [];\r\n        for (let i = 1; i <= 3; i++) {\r\n            foundationsButtons.push(<button key={i} id={i} onClick={this.handleClick} className=\"whowehelp__button\">{i}</button>)\r\n        }\r\n        let organizationsButtons = [];\r\n        for (let i = 1; i <= 2; i++) {\r\n            const id = i + 3\r\n            organizationsButtons.push(<button key={i} id={id} onClick={this.handleClick} className=\"whowehelp__button\">{i}</button>)\r\n        }\r\n        if (this.props.currentView === 0) return foundationsButtons\r\n        if (this.props.currentView === 1) return organizationsButtons\r\n    }\r\n\r\n    // foundationsView = () => {\r\n    //     this.setState({ currentPage: 1 })\r\n    // }\r\n    // organizationsView = () => {\r\n    //     this.setState({ currentPage: 4 })\r\n    // }\r\n    // colleciomsView = () => {\r\n    //     this.setState({ currentPage: 6 })\r\n    // }\r\n    handleClick = (e) => {\r\n        return this.props.onBuildButtons(e.target.id)\r\n    }\r\n   \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"whowehelp__container flex\">\r\n                <SectionTite>Komu pomagamy?</SectionTite>\r\n                <div className=\"whowehelp__container__partners flex\">\r\n                    <button className=\"whowehelp__container__partners__partner\" onClick={() => {\r\n                        this.props.onActiveView(0)\r\n                        this.props.onFundationsView(1)\r\n                    }}>\r\n                        <span>Fundacjom</span>\r\n                    </button>\r\n                    <button className=\"whowehelp__container__partners__partner\" onClick={() => {\r\n                        this.props.onActiveView(1)\r\n                        this.props.onOrganizationsView(4)\r\n                    }}>\r\n                        <span>Organizacjom pozarządowym</span>\r\n                    </button>\r\n                    <button className=\"whowehelp__container__partners__partner\" onClick={() => {\r\n                        this.props.onActiveView(2)\r\n                        this.props.oncollectionsView(6)\r\n                    }}>\r\n                        <span>Lokalnym zbiórkom</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"whowehelp__container__text flex\">\r\n                    {this.foundationsList()}\r\n                    {this.props.loadStatus}\r\n                    {this.props.loadStatus === \"ready\" && this.props.currentView === 1 && this.organizationsList()}\r\n                    {this.props.loadStatus === \"ready\" && this.props.currentView === 2 && this.collectionsList()}\r\n                    <div className=\"whowehelp__container__text__buttons flex\">\r\n                        {this.buildButtons()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentTodos:state.pag.currentTodos,\r\n        loadStatus:state.pag.loadStatus,\r\n        currentView:state.pag.currentView,\r\n        items:state.pag.items\r\n    } \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onLoadList: (items,status) => dispatch(actionCreators.loadList(items,status)),\r\n        onBuildList: () => dispatch(actionCreators.buildList()),\r\n        onActiveView: (view) => dispatch(actionCreators.activeView(view)),\r\n        onBuildButtons:(id) => dispatch(actionCreators.buildButtons(id)),\r\n        onFundationsView:(elem) => dispatch(actionCreators.fundationsView(elem)),\r\n        onOrganizationsView:(elem) => dispatch(actionCreators.organizationsView(elem)),\r\n        oncollectionsView:(elem) => dispatch(actionCreators.collectionsView(elem))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withFirebase(HomeWhoWeHelp));","import * as actionTypes from '../actions/actionsTypes';\r\n\r\nexport const loadList = (items,ready) => {\r\n    return {\r\n        type:actionTypes.LOAD_LIST,\r\n        items:items,\r\n        loadStatus:ready\r\n    }\r\n}\r\n\r\nexport const buildList = () => {\r\n    return {\r\n        type: actionTypes.BUILD_LIST\r\n    }\r\n}\r\n\r\nexport const activeView = (view) => {\r\n    return {\r\n        type:actionTypes.ACTIVE_VIEW,\r\n        activeView:view\r\n    }\r\n}\r\n\r\nexport const buildButtons = (id) => {\r\n    return{\r\n        type:actionTypes.BUILD_BUTTONS,\r\n        currentButton:id\r\n    }\r\n}\r\n\r\nexport const fundationsView = (elem) => {\r\n    return {\r\n        type:actionTypes.FUNDATIONS_VIEW,\r\n        currentPage:elem\r\n    }\r\n}\r\nexport const organizationsView = (elem) => {\r\n    return {\r\n        type:actionTypes.ORGANIZATIONS_VIEW,\r\n        currentPage:elem\r\n    }\r\n}\r\nexport const collectionsView = (elem) => {\r\n    return {\r\n        type:actionTypes.COLLECTIONS_VIEW,\r\n        currentPage:elem\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport SectionTitle from '../../SectionTitle/SectionTitle';\r\nimport { Formik } from 'formik';\r\nimport * as actionCreators from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\n\r\nclass HomeContactForm extends Component {\r\n\r\n    // validate = (e) => {\r\n    //     e.preventDefault();\r\n    //     const isNameOk = this.handleChangeName(this.state.name)\r\n    //     const isEmailOk = this.handleChangeEmail(this.state.email)\r\n    //     const isMessageOk = this.handleChangeEmail(this.state.message)\r\n\r\n    //     if (isNameOk !== true) {\r\n    //         this.setState({ isNameOk: false })\r\n    //     }\r\n    //     if (isEmailOk !== true) {\r\n    //         this.setState({ isEmailOk: false })\r\n    //     }\r\n    //     if (isMessageOk !== true) {\r\n    //         this.setState({ isMessageOk: false })\r\n    //     }\r\n    //     this.sendData()\r\n    // }\r\n\r\n    // handleChange = e => {\r\n    //     this.setState({\r\n    //         [e.target.name]: e.target.value\r\n    //     })\r\n    // }\r\n    // handleChangeName = (name) => {\r\n    //     if (/\\s/.test(name) || name.length <= 0) {\r\n    //         return false\r\n    //     }\r\n    //     return true\r\n    // }\r\n    // handleChangeMessage = (message) => {\r\n    //     if (test(message) < 120) return false\r\n    //     return true\r\n    // }\r\n\r\n    // handleChangeEmail = (email) => {\r\n    //     const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    //     return re.test(email);\r\n    // }\r\n\r\n    // sendData = () => {\r\n    //     fetch('https://fer-api.coderslab.pl/v1/portfolio/contact', {\r\n    //         method: 'POST',\r\n    //         headers: {\r\n    //             'Accept': 'application/json',\r\n    //             'Content-Type': 'application/json',\r\n    //         },\r\n    //         body: JSON.stringify({\r\n    //             name: this.state.name,\r\n    //             email: this.state.email,\r\n    //             message: this.state.message\r\n    //         })\r\n    //     })\r\n    //         .then(resp => resp.json())\r\n    //         .then(data => {\r\n    //             if (data.status === 'success') {\r\n    //                 //tutaj akcja jak bedzie success\r\n    //                 this.setState({\r\n    //                     dataStatus: data.status\r\n    //                 })\r\n    //             } else {\r\n    //                 // tutaj obsluga bledu\r\n    //                 this.setState({\r\n    //                     dataStatus: data.status\r\n    //                 })\r\n    //             }\r\n    //         })\r\n    // }\r\n\r\n    render() {\r\n        const validate = values => {\r\n            const errors = {};\r\n            if (!values.name) {\r\n              errors.name = 'Pole wymagane!';\r\n            } else if (/\\s/.test(values.name)) {\r\n              errors.name = 'Podane imię jest nieprawidłowe!';\r\n            }\r\n          \r\n            if (!values.email) {\r\n              errors.email = 'Pole wymagane!';\r\n            } else if (!/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(values.email)) {\r\n              errors.email = 'Podane email jest nieprawidłowy!';\r\n            }\r\n          \r\n            if (values.message.length < 120) {\r\n                errors.message = \"Podana wiadomość jest za krótka!\"\r\n            } \r\n          \r\n            return errors;\r\n        };\r\n        return (\r\n            <div name=\"contact\" className=\"contact flex\">\r\n                <div className=\"contact__empty\"></div>\r\n                <div className=\"contact__form\">\r\n                    <div className=\"contact__form__header flex\">\r\n                        <SectionTitle>Skontaktuj się z nami</SectionTitle>\r\n                        {\r\n                            this.props.status === \"success\" ? \r\n                            <div className=\"success\">Wiadomość zostałą wysłana! wkrótce się skontaktujemy</div>\r\n                            : <div className=\"error\">{this.props.status}</div>\r\n                        }\r\n                    </div>\r\n                    <Formik \r\n                        initialValues={{ name: \"\", email: \"\", message:\"\"}}\r\n                        validate={validate}\r\n                        onSubmit={(values, { setSubmitting, resetForm}) => {\r\n                            this.props.onSendData(values)\r\n                            setSubmitting(true);\r\n                            if(this.props.status === \"success\"){\r\n                                setSubmitting(false)\r\n                                resetForm();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {({ \r\n                            values, \r\n                            errors, \r\n                            touched, \r\n                            handleChange, \r\n                            handleBlur,\r\n                            handleSubmit,\r\n                            isSubmitting \r\n                        }) => (\r\n                            <form className=\"flex\" onSubmit={handleSubmit}>\r\n                                <div className=\"nameEmail flex\">\r\n                                    <div className=\"nameEmail__first\">\r\n                                        <label htmlFor=\"name\">Wpisz swoje imię</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"name\"\r\n                                            placeholder=\"Podaj swoje imię\"\r\n                                            onChange={handleChange}\r\n                                            //user enter and left field\r\n                                            onBlur={handleBlur}\r\n                                            value={values.name}\r\n                                            className={touched.name && errors.name ? \"input__error\" : null}\r\n                                        />\r\n                                        {\r\n                                            errors.name && touched.name ? \r\n                                            (\r\n                                                <div className=\"text__error\">{errors.name}</div>\r\n                                            ) : null\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"nameEmail__second\">\r\n                                        <label htmlFor=\"email\">Wpisz swój email</label>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"Krzysztof@xyz.com\"\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.email}\r\n                                            className={touched.email && errors.email ? \"input__error\" : null}\r\n                                        />\r\n                                        {\r\n                                            errors.email && touched.email ? \r\n                                            (\r\n                                                <div className=\"text__error\">{errors.email}</div>\r\n                                            ) : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                        <div className=\"msg flex\">\r\n                                <label>Wpisz swoją wiadomość</label>\r\n                                <textarea \r\n                                    placeholder=\"sit amet consectetur adipisicing Lorem ipsum dolor, sit amet consectetur \r\n                                    Lorem ipsum dolor, sit amet consectetur adipisicing elit. Et accusantium sunt nihil reiciendis at \r\n                                    fugiat neque harum pariatur similique fugit voluptatem, unde sit incidunt.\"\r\n                                    name=\"message\"\r\n                                    value={values.message} \r\n                                    type=\"message\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur} \r\n                                    className={touched.message && errors.message ? \"input__error\" : null}>\r\n                                 </textarea>\r\n                                        {\r\n                                            errors.message && touched.message ? \r\n                                            (\r\n                                                <div className=\"text__error\">{errors.message}</div>\r\n                                            ) : null\r\n                                         }\r\n                            </div>\r\n                            <input className=\"submit\" value=\"Wyślij\" type=\"submit\" disabled={isSubmitting}></input>\r\n                            </form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        status: state.con.status\r\n    } \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onSendData: (values) => dispatch(actionCreators.sendData(values))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(HomeContactForm);","import * as actionTypes from './actionsTypes'\r\n\r\n\r\nexport const dataStatus = (res) => {\r\n    return {\r\n        type: actionTypes.DATA_STATUS,\r\n        status: res\r\n    }\r\n}\r\n\r\nexport const sendData = (values) => {\r\n    return dispatch => {\r\n        fetch('https://fer-api.coderslab.pl/v1/portfolio/contact', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            name: values.name,\r\n            email: values.email,\r\n            message: values.message\r\n        })\r\n    })\r\n        .then(resp => resp.json())\r\n        .then(data => {\r\n                console.log(data)\r\n                dispatch(dataStatus(data.status))\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport LoginPanel from './HomeComponents/HomeLoginPanel';\r\nimport Navigation from './HomeComponents/HomeNavigation';\r\nimport Hero from './HomeComponents/HomeHero';\r\nimport HomeThreeColumns from './HomeComponents/HomeThreeColmns';\r\nimport HomeEasySteps from './HomeComponents/HomeEasySteps';\r\nimport HomeAbout from './HomeComponents/HomeAbout';\r\nimport WhoWeHelp from './HomeComponents/HomeWhoWeHelp';\r\nimport HomeContactForm from './HomeComponents/HomeContactForm';\r\n\r\nconst home = (props) => {\r\n    return (\r\n        <>\r\n            <div name=\"home\" className=\"container\">\r\n                <LoginPanel />\r\n                <Navigation />\r\n                <Hero />\r\n                <HomeThreeColumns/>\r\n                <HomeEasySteps/>\r\n                <HomeAbout/>\r\n                <WhoWeHelp/>\r\n                <HomeContactForm/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default home;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport HomeNavigation from '../Home/HomeComponents/HomeNavigation';\r\nimport { withFirebase } from '../Firebase/context';\r\nimport { Formik } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../store/actions/index';\r\n\r\nclass LogIn extends Component {\r\n\r\n    // handleChange = e => {\r\n    //     this.setState({\r\n    //         [e.target.name]: e.target.value,\r\n    //         isEmailok: true,\r\n    //         isPasswordok: true,\r\n    //     })\r\n    // }\r\n\r\n    // validate = () => {\r\n    //     const isEmailok = this.handleEmailChange(this.state.email)\r\n    //     const isPasswordok = this.handlePasswordChange(this.state.password)\r\n\r\n    //     if (isEmailok !== true) {\r\n    //         this.setState({ isEmailok: false })\r\n    //     }\r\n    //     if (isPasswordok !== true) {\r\n    //         this.setState({ isPasswordok: false })\r\n    //     }\r\n    // }\r\n    // blockSubmit = () => {\r\n    //     const { isEmailok, isPasswordok } = this.state\r\n    //     return isEmailok && isPasswordok\r\n    // }\r\n\r\n    // handleEmailChange = (email) => {\r\n    //     const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    //     return re.test(email);\r\n    // }\r\n\r\n    // handlePasswordChange = (password) => {\r\n    //     if (password.length < 6) return false\r\n    //     return true\r\n    // }\r\n    logInUser = (email,password) => {\r\n            this.props.firebase\r\n                .doSignInWithEmailAndPassword(email, password)\r\n                .then(authUser => {\r\n                    this.props.history.push('/')\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    this.props.onlogInError(error)\r\n                });\r\n    }\r\n\r\n    render() {\r\n        const validate = values => {\r\n            const errors = {};\r\n            if (!values.email) {\r\n                errors.email = 'Pole wymagane';\r\n            } else if (!/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(values.email)) {\r\n                errors.email = 'Podane email jest nieprawidłowy!';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Pole wymagane';\r\n            } else if (values.password.length < 6) {\r\n                errors.password = 'Podane hasło jest za krótkie!';\r\n            }\r\n            return errors;\r\n        };\r\n        return (\r\n            <>\r\n                <HomeNavigation />\r\n                <div className=\"logInPanel flex\">\r\n                    <div className=\"logInPanel__header flex\">\r\n                        <h2>Skontaktuj się z nami</h2>\r\n                        <div className=\"logInPanel__header__img\"></div>\r\n                    </div>\r\n                    <div className=\"form__container flex\">\r\n                        <Formik\r\n                            initialValues={{ name: \"\", password: \"\" }}\r\n                            validate={validate}\r\n                            onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                                this.logInUser(values.email, values.password)\r\n                                // setSubmitting(true);\r\n                            }}\r\n                        >\r\n                            {({\r\n                                values,\r\n                                errors,\r\n                                touched,\r\n                                handleChange,\r\n                                handleBlur,\r\n                                handleSubmit,\r\n                                isSubmitting\r\n                            }) => (\r\n                                    <form className=\"form__login flex\" onSubmit={handleSubmit}>\r\n                                        \r\n                                        {this.props.error &&\r\n                                            <div className=\"errors flex\">\r\n                                                <i class=\"fas fa-exclamation-circle\"></i>\r\n                                                <p>{this.props.error.message}</p>\r\n                                            </div>\r\n                                        }\r\n                                        <label>Email</label>\r\n                                        <input\r\n                                            name='email'\r\n                                            type='email'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.email}\r\n                                            className={touched.email && errors.email ? \"input__error\" : null}\r\n                                        ></input>\r\n                                        {\r\n                                            errors.email && touched.email ?\r\n                                                (\r\n                                                    <div className=\"text__error\">\r\n                                                        <p>{errors.email}</p>\r\n                                                    </div>\r\n                                                ) : null\r\n                                        }\r\n                                        <label>Hasło</label>\r\n                                        <input\r\n                                            name='password'\r\n                                            type='password'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.password}\r\n                                            className={touched.password && errors.password ? \"input__error\" : null}\r\n                                        ></input>\r\n                                        {\r\n                                            errors.password && touched.password ? \r\n                                            (\r\n                                                <div className=\"text__error\">\r\n                                                    <p>{errors.password}</p>\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n                                        <div className=\"logInPanel__butons flex\">\r\n                                            <button><Link to=\"/rejestracja\">załóż konto</Link></button>\r\n                                            <button type=\"submit\" disabled={isSubmitting}>Zaloguj się</button>\r\n                                        </div>\r\n                                    </form>\r\n                                )}\r\n                        </Formik>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        error: state.logIn.logInError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onlogInError: (err) => dispatch(actionCreators.logInError(err))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withFirebase(LogIn)));\r\n\r\n","import * as actionTypes from './actionsTypes'\r\n\r\nexport const logInError = (err) => {\r\n    return{\r\n        type: actionTypes.LOGIN_ERROR,\r\n        logInError:err\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport HomeNavigation from '../Home/HomeComponents/HomeNavigation';\r\nimport { withFirebase } from '../Firebase/context';\r\nimport { Formik } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../store/actions/index';\r\n\r\n\r\nclass Registry extends Component {\r\n    // handleChange = e => {\r\n    //     this.setState({\r\n    //         [e.target.name]: e.target.value,\r\n    //         isEmailOk: true,\r\n    //         isPasswordOk: true,\r\n    //         isSecondPasswordOk: true\r\n    //     })\r\n    // }\r\n\r\n    // validate = (e) => {\r\n    //     e.preventDefault();\r\n    //     const isEmailOk = this.handleEmailChange(this.state.email)\r\n    //     const isPasswordOk = this.handlePasswordChange(this.state.password)\r\n    //     const isSecondPasswordOk = this.handleSecondPasswordChange(this.state.secondPassword, this.state.password)\r\n\r\n    //     if (isEmailOk !== true) {\r\n    //         this.setState({ isEmailOk: false })\r\n    //     }\r\n    //     if (isPasswordOk !== true) {\r\n    //         this.setState({ isPasswordOk: false })\r\n    //     }\r\n    //     if (isSecondPasswordOk !== true) {\r\n    //         this.setState({ isSecondPasswordOk: false })\r\n    //     }\r\n    // }\r\n\r\n    registryUser = (email,password) => {\r\n            this.props.firebase\r\n                .doCreateUserWithEmailAndPassword(email, password)\r\n                .then(authUser => {\r\n                    this.props.history.push('/')\r\n                })\r\n                .catch(error => {\r\n                    this.props.onregistryError(error)\r\n                });\r\n    }\r\n\r\n    // blockSubmit = () => {\r\n    //     const { isEmailOk, isPasswordOk, isSecondPasswordOk } = this.state\r\n    //     return isEmailOk && isPasswordOk && isSecondPasswordOk\r\n\r\n    // }\r\n\r\n    // handleEmailChange = (email) => {\r\n    //     const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    //     return re.test(email);\r\n    // }\r\n\r\n    // handlePasswordChange = (password) => {\r\n    //     if (password.length < 6) return false\r\n    //     return true\r\n    // }\r\n\r\n    // handleSecondPasswordChange = (secondPassword, password) => {\r\n    //     if (password != secondPassword) {\r\n    //         return false\r\n    //     }\r\n    //     return true\r\n    // }\r\n\r\n    render() {\r\n        const validate = values => {\r\n            const errors = {};\r\n            if (!values.email) {\r\n                errors.email = 'Pole wymagane';\r\n            } else if (!/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(values.email)) {\r\n                errors.email = 'Podane email jest nieprawidłowy!';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Pole wymagane';\r\n            } else if (values.password.length < 6) {\r\n                errors.password = 'Podane hasło jest za krótkie!';\r\n            }\r\n            if (!values.secondPassword) {\r\n                errors.secondPassword = 'Pole wymagane';\r\n            } else if (values.secondPassword !== values.password ){\r\n                errors.secondPassword = \"Hasła są różne!\"\r\n            }\r\n\r\n            return errors;\r\n        };\r\n        return (\r\n            <>\r\n                <HomeNavigation />\r\n                <div className=\"registryPanel flex\">\r\n                    <div className=\"registryPanel__header flex\">\r\n                        <h2>Zarejestruj się</h2>\r\n                        <div className=\"registryPanel__header__img\"></div>\r\n                    </div>\r\n                    <div className=\"form__container flex\">\r\n                        <Formik\r\n                            initialValues={{email: \"\", password: \"\"}}\r\n                            validate={validate}\r\n                            onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                                this.registryUser(values.email,values.password)\r\n                                // setSubmitting(true);\r\n                            }}\r\n                        >\r\n                            {({\r\n                                values,\r\n                                errors,\r\n                                touched,\r\n                                handleChange,\r\n                                handleBlur,\r\n                                handleSubmit,\r\n                                isSubmitting\r\n                            }) => (\r\n                                    <form className=\"form__registry flex\" onSubmit={handleSubmit}>\r\n                                        {this.props.error &&\r\n                                            <div className=\"errors flex\">\r\n                                                <i className=\"fas fa-exclamation-circle\"></i>\r\n                                                <p>{this.props.error.message}</p>\r\n                                            </div>\r\n                                        }\r\n                                        <label>Email</label>\r\n                                        <input\r\n                                            name='email'\r\n                                            type='email'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.email}\r\n                                            className={touched.email && errors.email ? \"input__error\" : null}\r\n                                        />\r\n                                        {\r\n                                            errors.email && touched.email ? \r\n                                            (\r\n                                                <div className=\"text__error\">\r\n                                                    <p>{errors.email}</p>\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n                                        <label>Hasło</label>\r\n                                        <input\r\n                                            name='password'\r\n                                            type='password'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.password}\r\n                                            className={touched.password && errors.password ? \"input__error\" : null}\r\n                                        ></input>\r\n                                        {\r\n                                            errors.password && touched.password ? \r\n                                            (\r\n                                                <div className=\"text__error\">\r\n                                                    <p>{errors.password}</p>\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n                                        <label>Powtórz hasło</label>\r\n                                        <input\r\n                                            name='secondPassword'\r\n                                            type='password'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.secondPassword}\r\n                                            className={touched.secondPassword && errors.secondPassword ? \"input__error\" : null}\r\n                                        ></input>\r\n                                        {\r\n                                            errors.secondPassword && touched.secondPassword ? \r\n                                            (\r\n                                                <div className=\"text__error\">\r\n                                                    <p>{errors.secondPassword}</p> \r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n                                        <div className=\"registryPanel__butons flex\">\r\n                                            <button disabled={isSubmitting} type=\"submit\">załuż konto</button>\r\n                                            <button><Link to=\"/logowanie\">zaloguj się</Link></button>\r\n                                        </div>\r\n                                    </form>\r\n                                )}\r\n                        </Formik>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        error: state.reg.regError\r\n    } \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onregistryError: (err) => dispatch(actionCreators.registryError(err))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(withFirebase(Registry)));\r\n","import * as actionTypes from './actionsTypes'\r\n\r\nexport const registryError = (err) => {\r\n    return{\r\n        type: actionTypes.REGISTRY_ERROR,\r\n        regError:err\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport HomeNavigation from '../Home/HomeComponents/HomeNavigation';\r\nimport SectionTitle from '../SectionTitle/SectionTitle';\r\n\r\nconst logout = () => {\r\n    return(\r\n        <>\r\n            <HomeNavigation />\r\n            <div className=\"logout__panel flex\">\r\n                    <SectionTitle>Wylogowano pomyślnie!</SectionTitle>\r\n                    <Link to=\"/\">\r\n                        <button className=\"logout__panel__button\">Strona główna</button>\r\n                    </Link>\r\n            </div>\r\n        </>\r\n    ); \r\n}\r\n\r\nexport default logout;","import React, { Component } from 'react';\r\nimport HomeLoginPanel from '../../Home/HomeComponents/HomeLoginPanel';\r\nimport HomeNavigation from '../../Home/HomeComponents/HomeNavigation';\r\n\r\n\r\nexport default class GiveStuffHeader extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <HomeLoginPanel/>\r\n                <HomeNavigation/>\r\n                <div className='giveStuff__Top flex'>\r\n                    <div className='giveStuff__Top__heroBanner'></div>\r\n                    <div className='giveStuff__Top__items flex'>\r\n                        <div className=\"giveStuff__Top__items__header flex\">\r\n                            <div className=\"giveStuff__Top__items__header__title\">\r\n                                Oddaj rzeczy, których już nie chcesz<br /> POTRZEBUJĄCYM\r\n                            </div>\r\n                            <div className=\"giveStuff__Top__items__header__img\"></div>\r\n                        </div>\r\n                        <div className='giveStuff__Top__items__steps'>Wystarczą 4 proste kroki:</div>\r\n                        <div className='giveStuff__Top__items__columns'>\r\n                            <div className=\"col\">\r\n                                <div>1</div>\r\n                                <div>Wybierz<br />rzeczy</div>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <div>2</div>\r\n                                <div>Spakuj je<br />w worki</div>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <div>3</div>\r\n                                <div>Wybierz<br />fundację</div>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <div>4</div>\r\n                                <div>Zamów<br />kuriera</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Formik, Field, Form } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../store/actions/index';\r\n\r\n\r\nclass GiveStuffFirstForm extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <h2>Zaznacz co chcesz oddać:</h2>\r\n                <Formik\r\n                    initialValues={{ selectedOption: \"\" }}\r\n                    onSubmit = {(values) => {\r\n                        this.props.onFirstFormValue(values)\r\n                        this.props.onNextPage(this.props.pageNr + 1)\r\n                    }}\r\n                >\r\n                    {({ values }) => (\r\n                        <Form>\r\n                            <div className=\"conatainer__first\">\r\n                                <label className=\"radio\">\r\n                                    <Field\r\n                                        type=\"radio\"\r\n                                        value=\"ubrania które nadają się do ponownego użycia\"\r\n                                        name=\"selectedOption\">\r\n                                    </Field>\r\n                                    ubrania które nadają się do ponownego użycia\r\n                                 <span className=\"checkmark\"></span>\r\n                                </label>\r\n                                <label className=\"radio\">\r\n                                    <Field\r\n                                        type=\"radio\"\r\n                                        value=\"ubrania do wyrzucenia\"\r\n                                        name=\"selectedOption\">\r\n                                    </Field>\r\n                                    ubrania do wyrzucenia\r\n                                 <span className=\"checkmark\"></span>\r\n                                </label>\r\n                                <label className=\"radio\">\r\n                                    <Field\r\n                                        type=\"radio\"\r\n                                        value=\"zabawki\"\r\n                                        name=\"selectedOption\">\r\n                                    </Field>\r\n                                    zabawki\r\n                                <span className=\"checkmark\"></span>\r\n                                </label>\r\n                                <label className=\"radio\">\r\n                                    <Field\r\n                                        type=\"radio\"\r\n                                        value=\"książki\"\r\n                                        name=\"selectedOption\">\r\n                                    </Field>\r\n                                    książki\r\n                                <span className=\"checkmark\"></span>\r\n                                </label>\r\n                                <label className=\"radio\">\r\n                                    <Field\r\n                                        type=\"radio\"\r\n                                        value=\"inne\"\r\n                                        name=\"selectedOption\">\r\n                                    </Field>\r\n                                    inne\r\n                                <span className=\"checkmark\"></span>\r\n                                </label>\r\n                                    <button type=\"submit\"className=\"conatainer__first__button\">Dalej\r\n                                </button> \r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n        return {\r\n            pageNr: state.formsVal.pageNr\r\n        }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFirstFormValue: (val) => dispatch(actionCreators.firstFormValue(val)),\r\n        onNextPage: (number) => dispatch(actionCreators.nextPage(number))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(GiveStuffFirstForm);","import React, { Component } from 'react';\r\nimport { Formik, Field, Form } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../store/actions/index';\r\n\r\n\r\nclass GiveStuffSecondForm extends Component {\r\n\r\n\r\n    toggleClass = () => {\r\n        const currentValue = this.props.active;\r\n        this.props.onToggleClass(!currentValue)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Formik\r\n                    initialValues={{ bags: \"\" }}\r\n                    onSubmit={(values) => {\r\n                        this.props.onSecondFormValue(values)\r\n                        this.props.onNextPage(this.props.pageNr + 1)\r\n                    }}\r\n                >\r\n                    {({ values }) => (\r\n                        <Form>\r\n                            <h2>Podaj liczbę 60l worków, w które spakowałeś/aś rzeczy:</h2>\r\n                            <div className=\"select__box flex\">\r\n                                <div\r\n                                    className={`option__container ${this.props.active ? 'active' : null}`}>\r\n                                    <div className={`option ${this.props.active ? 'active' : null}`}\r\n                                        onClick={this.toggleClass}>\r\n                                        <Field\r\n                                            className=\"radio\"\r\n                                            type=\"radio\"\r\n                                            value=\"1\"\r\n                                            name=\"bags\">\r\n                                        </Field>\r\n                                        <label>1</label>\r\n                                    </div>\r\n                                    <div\r\n                                        className={`option ${this.props.active ? 'active' : null}`}\r\n                                        onClick={this.toggleClass}>\r\n                                        <Field\r\n                                            className=\"radio\"\r\n                                            type=\"radio\"\r\n                                            value=\"2\"\r\n                                            name=\"bags\">\r\n                                        </Field>\r\n                                        <label>2</label>\r\n                                    </div>\r\n                                    <div className={`option ${this.props.active ? 'active' : null}`}\r\n                                        onClick={this.toggleClass}>\r\n                                        <Field\r\n                                            className=\"radio\"\r\n                                            type=\"radio\"\r\n                                            value=\"3\"\r\n                                            name=\"bags\">\r\n                                        </Field>\r\n                                        <label>3</label>\r\n                                    </div>\r\n                                    <div className={`option ${this.props.active ? 'active' : null}`}\r\n                                        onClick={this.toggleClass}>\r\n                                        <Field\r\n                                            className=\"radio\"\r\n                                            type=\"radio\"\r\n                                            value=\"4\"\r\n                                            name=\"bags\">\r\n                                        </Field>\r\n                                        <label>4</label>\r\n                                    </div>\r\n                                    <div className={`option ${this.props.active ? 'active' : null}`}\r\n                                        onClick={this.toggleClass}>\r\n                                        <Field\r\n                                            className=\"radio\"\r\n                                            type=\"radio\"\r\n                                            value=\"5\"\r\n                                            name=\"bags\">\r\n                                        </Field>\r\n                                        <label>5</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"selected\" onClick={this.toggleClass}>\r\n                                    Liczba 60 worków\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"flex\">\r\n                                <button\r\n                                    className=\"button__first\"\r\n                                    onClick={() => this.props.onPreviewPage(this.props.pageNr - 1)}>Wstecz\r\n                                </button>\r\n                                <button type=\"submit\" className=\"button__second\">Dalej</button>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        active: state.formsVal.active,\r\n        pageNr: state.formsVal.pageNr\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSecondFormValue: (val) => dispatch(actionCreators.secondFormValue(val)),\r\n        onToggleClass: (val) => dispatch(actionCreators.toggleClass(val)),\r\n        onNextPage: (number) => dispatch(actionCreators.nextPage(number)),\r\n        onPreviewPage: (number) => dispatch(actionCreators.previewPage(number))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GiveStuffSecondForm);","import React, { Component } from 'react';\r\nimport { Formik, Field, Form } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../store/actions/index';\r\n\r\nclass GiveStuffThirdForm extends Component {\r\n\r\n    toggleClass = () => {\r\n        const currentValue = this.props.active;\r\n        this.props.onToggleClass(!currentValue)\r\n    };\r\n\r\n    render() {\r\n        const validate = values => {\r\n            const errors = {};\r\n            if (!values.whoHelp) {\r\n                errors.whoHelp = 'Wybierz komu chcesz pomóc';\r\n            }\r\n            return errors;\r\n        };\r\n        return (\r\n            <>\r\n                <Formik\r\n                    initialValues={{ location: \"\", whoHelp: \"\", optional: \"\" }}\r\n                    validate={validate}\r\n                    onSubmit={(values) => {\r\n                        this.props.onThirdFormValue(values)\r\n                        this.props.onNextPage(this.props.pageNr + 1)\r\n                    }}\r\n                >\r\n                    {({\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        isSubmitting\r\n                    }) => (\r\n                        <Form>\r\n                            <div className=\"third__container flex\">\r\n                                <h2>Lokalizacja:</h2>\r\n                                <div className=\"choose__box flex\">\r\n                                    <div className={`option__main ${this.props.active ? 'active' : null}`}>\r\n                                        <div className={`option ${this.props.active ? 'active' : null}`}\r\n                                            onClick={this.toggleClass}>\r\n                                            <Field\r\n                                                className=\"radio\"\r\n                                                type=\"radio\"\r\n                                                value=\"Poznań\"\r\n                                                name=\"location\">\r\n                                            </Field>\r\n                                            <label>Poznań</label>\r\n                                        </div>\r\n                                        <div\r\n                                            className={`option ${this.props.active ? 'active' : null}`}\r\n                                            onClick={this.toggleClass}>\r\n                                            <Field\r\n                                                className=\"radio\"\r\n                                                type=\"radio\"\r\n                                                value=\"Warszawa\"\r\n                                                name=\"location\">\r\n                                            </Field>\r\n                                            <label>Warszawa</label>\r\n                                        </div>\r\n                                        <div className={`option ${this.props.active ? 'active' : null}`}\r\n                                            onClick={this.toggleClass}>\r\n                                            <Field\r\n                                                className=\"radio\"\r\n                                                type=\"radio\"\r\n                                                value=\"Kraków\"\r\n                                                name=\"location\">\r\n                                            </Field>\r\n                                            <label>Kraków</label>\r\n                                        </div>\r\n                                        <div className={`option ${this.props.active ? 'active' : null}`}\r\n                                            onClick={this.toggleClass}>\r\n                                            <Field\r\n                                                className=\"radio\"\r\n                                                type=\"radio\"\r\n                                                value=\"Wrocław\"\r\n                                                name=\"location\">\r\n                                            </Field>\r\n                                            <label>Wrocław</label>\r\n                                        </div>\r\n                                        <div className={`option ${this.props.active ? 'active' : null}`}\r\n                                            onClick={this.toggleClass}>\r\n                                            <Field\r\n                                                className=\"radio\"\r\n                                                type=\"radio\"\r\n                                                value=\"Katowice\"\r\n                                                name=\"location\">\r\n                                            </Field>\r\n                                            <label>Katowice</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"selected\" onClick={this.toggleClass}>\r\n                                        -- wybierz --\r\n                        </div>\r\n                                </div>\r\n                                {/* komu chcesz pomoć*/}\r\n                                <div className=\"third__container__help flex\">\r\n                                    <h3>Komu chcesz pomóc</h3>\r\n                                    {this.props.error &&\r\n                                            <div className=\"errors flex\">\r\n                                                <i class=\"fas fa-exclamation-circle\"></i>\r\n                                                <p>{this.props.error.message}</p>\r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            errors.whoHelp && touched.whoHelp ?\r\n                                                (\r\n                                                <div className=\"errors flex\">\r\n                                                    <i class=\"fas fa-exclamation-circle\"></i>\r\n                                                    <p>{errors.whoHelp}</p>\r\n                                                </div>\r\n                                                    // <div className=\"text__error\">\r\n                                                    //     <p>{errors.whoHelp}</p>\r\n                                                    // </div>\r\n                                                ) : null\r\n                                        }\r\n                                    <div className=\"third__container__help__main\">\r\n                                        <label className=\"checkbox\">\r\n                                            <Field\r\n                                                name=\"whoHelp\"\r\n                                                type=\"checkbox\"\r\n                                                value=\"dzieciom\"\r\n                                                >\r\n                                            </Field>\r\n                                            <span className=\"checkmark\">dzieciom</span>\r\n                                        </label>\r\n                                        <label className=\"checkbox\">\r\n                                            <Field\r\n                                                name=\"whoHelp\"\r\n                                                type=\"checkbox\"\r\n                                                value=\"samotnym matkom\">\r\n                                            </Field>\r\n                                            <span className=\"checkmark\">samotnym matkom</span>\r\n                                        </label>\r\n                                        <label className=\"checkbox\">\r\n                                            <Field\r\n                                                name=\"whoHelp\"\r\n                                                type=\"checkbox\"\r\n                                                value=\"bezdomnym\">\r\n                                            </Field>\r\n                                            <span className=\"checkmark\">bezdomnym</span>\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"third__container__help__main\">\r\n                                        <label className=\"checkbox\">\r\n                                            <Field\r\n                                                name=\"whoHelp\"\r\n                                                type=\"checkbox\"\r\n                                                value=\"niepełnosprawnym\">\r\n                                            </Field>\r\n                                            <span className=\"checkmark\">niepełnosprawnym</span>\r\n                                        </label>\r\n                                        <label className=\"checkbox\">\r\n                                            <Field\r\n                                                name=\"whoHelp\"\r\n                                                type=\"checkbox\"\r\n                                                value=\"osobom starszym\">\r\n                                            </Field>\r\n                                            <span className=\"checkmark\">osobom starszym</span>\r\n                                        </label>\r\n                                    </div>\r\n                                    <h3>Wpisz nazwę konkretnej organizacji (opcjonalnie)</h3>\r\n                                    <input\r\n                                        className=\"text\"\r\n                                        type=\"text\"\r\n                                        name=\"optional\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.optional}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"flex\">\r\n                                    <button\r\n                                        className=\"third__container__button__first\"\r\n                                        onClick={() => this.props.onPreviewPage(this.props.pageNr - 1)}>Wstecz\r\n                                    </button>\r\n                                    <button type=\"submit\" className=\"third__container__button__second\" disabled={isSubmitting}>Dalej</button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        active: state.formsVal.active,\r\n        pageNr: state.formsVal.pageNr\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onThirdFormValue: (val) => dispatch(actionCreators.thirdFormValue(val)),\r\n        onToggleClass: (val) => dispatch(actionCreators.toggleClass(val)),\r\n        onNextPage: (number) => dispatch(actionCreators.nextPage(number)),\r\n        onPreviewPage: (number) => dispatch(actionCreators.previewPage(number))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GiveStuffThirdForm)","import React, { Component } from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../store/actions/index';\r\nimport * as Yup from 'yup';\r\n\r\nclass GiveStuffFourth extends Component {\r\n\r\n    render() {\r\n        const validationSchema = Yup.object().shape({\r\n            street: Yup.string()\r\n                .required(),\r\n            city: Yup.string()\r\n                .required(),\r\n            zipCode: Yup.string()\r\n                .required(),\r\n            phoneNumber: Yup.string()\r\n                .required(),\r\n            data: Yup.string()\r\n                .required(),\r\n            hour: Yup.string()\r\n                .required()\r\n        });\r\n        return (\r\n            <>\r\n                <Formik\r\n                    initialValues={{ street: \"\", city: \"\", zipCode: \"\", phoneNumber: \"\", data: \"\", hour: \"\", notes: \"\" }}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={(values) => {\r\n                        this.props.onFourthFormValue(values)\r\n                        this.props.onNextPage(this.props.pageNr + 1)\r\n                    }}\r\n                >\r\n                    {({\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        isSubmitting\r\n                    }) => (\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <div className=\"container__fourth flex\">\r\n                                <h2>Podaj adres oraz termin odbioru rzeczy przez kuriera</h2>\r\n                                <div className=\"container__fourth__form flex\">\r\n                                    <div className=\"container__fourth__form__main flex\">\r\n                                        <h3>Adres odbioru</h3>\r\n                                        <form className=\"container__fourth__form__main__first flex\" >\r\n                                            <div className=\"container__fourth__form__main__first__elements flex\">\r\n                                                <label>Ulica</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"street\"\r\n                                                    onChange={handleChange}\r\n                                                    onBlur={handleBlur}\r\n                                                    value={values.street}\r\n                                                    className={touched.street && errors.street ? \"fourth_form_input__error\" : null}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"container__fourth__form__main__first__elements flex\">\r\n                                                <label>Miasto</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"city\"\r\n                                                    onChange={handleChange}\r\n                                                    onBlur={handleBlur}\r\n                                                    value={values.city}\r\n                                                    className={touched.street && errors.street ? \"fourth_form_input__error\" : null}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"container__fourth__form__main__first__elements flex\">\r\n                                                <label>Kod poczowy</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"zipCode\"\r\n                                                    onChange={handleChange}\r\n                                                    onBlur={handleBlur}\r\n                                                    value={values.zipCode}\r\n                                                    className={touched.street && errors.street ? \"fourth_form_input__error\" : null}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"container__fourth__form__main__first__elements flex\">\r\n                                                <label>Numer telefonu</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"phoneNumber\"\r\n                                                    onChange={handleChange}\r\n                                                    onBlur={handleBlur}\r\n                                                    value={values.phoneNumber}\r\n                                                    className={touched.street && errors.street ? \"fourth_form_input__error\" : null}\r\n                                                />\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                    <div className=\"container__fourth__form__main__second flex\">\r\n                                        <h3>Termin odbioru</h3>\r\n                                        <form className=\"container__fourth__form__main__form flex\" onSubmit={handleSubmit}>\r\n                                            <div className=\"container__fourth__form__main__form__elements flex\">\r\n                                                <label>Data</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"data\"\r\n                                                    onChange={handleChange}\r\n                                                    onBlur={handleBlur}\r\n                                                    value={values.data}\r\n                                                    className={touched.street && errors.street ? \"fourth_form_input__error\" : null}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"container__fourth__form__main__form__elements flex\">\r\n                                                <label>Godzina</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"hour\"\r\n                                                    onChange={handleChange}\r\n                                                    onBlur={handleBlur}\r\n                                                    value={values.hour}\r\n                                                    className={touched.street && errors.street ? \"fourth_form_input__error\" : null}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"container__fourth__form__main__form__elemets flex\">\r\n                                                <label>Uwagi <br />dla kuriera</label>\r\n                                                <textarea\r\n                                                    name=\"notes\"\r\n                                                    onChange={handleChange}\r\n                                                    onBlur={handleBlur}\r\n                                                    value={values.notes}\r\n                                                />\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"flex\">\r\n                                    <button\r\n                                        className=\"container__fourth__button__first\"\r\n                                        onClick={() => this.props.onPreviewPage(this.props.pageNr - 1)}>Wstecz\r\n                                </button>\r\n                                    <button \r\n                                        type=\"submit\" \r\n                                        className=\"container__fourth__button__second\"\r\n                                        disabled={isSubmitting}>Dalej\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        pageNr: state.formsVal.pageNr\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFourthFormValue: (val) => dispatch(actionCreators.fourthFormValue(val)),\r\n        onNextPage: (number) => dispatch(actionCreators.nextPage(number)),\r\n        onPreviewPage: (number) => dispatch(actionCreators.previewPage(number))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GiveStuffFourth)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../store/actions/index';\r\nimport { withFirebase } from '../../Firebase/context';\r\n\r\nclass GiveStuffSummary extends Component {\r\n\r\n    componentDidMount = () => {\r\n        const basket = [\r\n            {name: 'Klawiatura', price: 99},\r\n            {name: 'Komputer', price: 2990},\r\n            {name: 'Kabel', price: 19}\r\n        ];\r\n        const val = basket.slice(-1)[0];\r\n        const dataArray = Object.keys(val).map(function(k){return val[k]})\r\n        console.log(dataArray)\r\n        //tu poniżej próbowałem zrobić to samo co wyżej czyli\r\n        //wyciągąć ostatnio obiekt z tablicy i zwrócić same wartości tego obiektu w tablicy \r\n        //ale niestety zwraca mi undifined :/ a prykład powyższy tesowy zwraca mi odpowiednie warości\r\n        const formLastValue =   Object.keys(this.props.fourthFormValue.slice(-1)[0]);\r\n        const newArr = formLastValue.map(function(i){return formLastValue[i]})\r\n        console.log(newArr)\r\n    }\r\n\r\n    sendDataToFirebase = () => {\r\n        const ref = this.props.firebase.db.ref('summary')\r\n        ref.push(this.props.thirdFormValues)\r\n    }\r\n\r\n    render() {\r\n        const { selectedOption, bags, thirdFormValues, fourthFormValue } = this.props\r\n        const formLastValue =   Object.keys(fourthFormValue.slice(-1)[0]);\r\n        const newArr = formLastValue.map(function(i){return formLastValue[i]})\r\n        \r\n        return (\r\n            <div className=\"summary__container flex\">\r\n                <h2>Podsumowanie twojej darowizny</h2>\r\n                <div className=\"summary__container__give flex\">\r\n                    <h3>oddajesz:</h3>\r\n                    <div className=\"summary__container__give__stuff flex\">\r\n                        <div className=\"summary__container__give__stuff__imgfirst\"></div>\r\n                        <span> {bags} worki {selectedOption}</span>\r\n                    </div>\r\n                    <div className=\"summary__container__give__whoHelp flex\">\r\n                        <i class=\"fas fa-smile\"></i>\r\n                        <span>Komu:</span>\r\n                        <ul>\r\n                            {thirdFormValues.whoHelp.map((item, index) => {\r\n                                return <li key={index}>{item}</li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"summary__container__give__location flex\">\r\n                        <div className=\"summary__container__give__location__imgsecond\"></div>\r\n                        <span>dla lokalizacji: {thirdFormValues.location}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"summary__container__address flex\">\r\n                    <div className=\"summary__container__address__main flex\">\r\n                        <h3>Adres odbioru</h3>\r\n                        <div className=\"summary__container__address__main__firstcolumn flex\">\r\n                            <div\r\n                                className=\"summary__container__address__main__firstcolumn__firstelement flex\">\r\n                                <span>Ulica:</span>\r\n                                <span>Miasto:</span>\r\n                                <span>Kod pocztowy:</span>\r\n                                <span>Numer telefonu:</span>\r\n                            </div>\r\n                            <div className=\"summary__container__address__main__firstcolumn__secondelement flex\">\r\n                                {fourthFormValue.map((item) => {\r\n                                    return (\r\n                                        <>\r\n                                            <span><strong>{item.street}</strong></span>\r\n                                            <span><strong>{item.city}</strong></span>\r\n                                            <span><strong>{item.zipCode}</strong></span>\r\n                                            <span><strong>{item.phoneNumber}</strong></span>\r\n                                        </>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"summary__container__address__mainsecond flex\">\r\n                        <h3>Termin odbioru</h3>\r\n                        <div className=\"summary__container__address__mainsecond__secondcolumn flex\">\r\n                            <div\r\n                                className=\"summary__container__address__mainsecond__secondcolumn__firstelement flex\">\r\n                                <span>Data:</span>\r\n                                <span>Godzina:</span>\r\n                                <span>Uwagi dla kuriera:</span>\r\n                            </div>\r\n                            <div className=\"summary__container__address__mainsecond__secondcolumn__secondelement flex\">\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex\">\r\n                    <button type=\"submit\"\r\n                        className=\"summary__container__button__first\"\r\n                        onClick={() => this.props.onPreviewPage(this.props.pageNr - 1)}>Wstecz\r\n                    </button>\r\n                    <button type=\"submit\"className=\"summary__container__button__second\" \r\n                    onClick={this.sendDataToFirebase()}>Potwierdzam</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        pageNr: state.formsVal.pageNr,\r\n        selectedOption: state.formsVal.firsFormValue.selectedOption,\r\n        bags: state.formsVal.secondFormValue.bags,\r\n        thirdFormValues: state.formsVal.thirdFormValue,\r\n        fourthFormValue: state.formsVal.fourthFormValue\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onPreviewPage: (number) => dispatch(actionCreators.previewPage(number))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withFirebase(GiveStuffSummary));","import React from \"react\";\r\n\r\nconst giveStuffConfirm = () => {\r\n    return (\r\n        <div className=\"confirm flex\">\r\n            <span className=\"confirm__title\">\r\n                Dziękujemy za przesłanie formularza<br />Na maila prześlemy wszelkie informacje o odbiorze\r\n            </span>\r\n            <span className=\"confirm__decoration\"></span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default giveStuffConfirm","import React, { Component } from 'react';\r\nimport GiveStuffHeader from './GiveStuffComponents/GiveStuffHeader';\r\nimport GiveStuffFirstForm from './GiveStuffComponents/GiveStuffFirstForm';\r\nimport GiveStuffSecondForm from './GiveStuffComponents/GiveStuffSecondForm';\r\nimport GiveStuffThirdForm from './GiveStuffComponents/GiveStuffThirdForm';\r\nimport GiveStuffFourthForm from './GiveStuffComponents/GiveStuffFourthForm';\r\nimport GiveStuffSummary from './GiveStuffComponents/GiveStuffSummary';\r\nimport GiveStuffConfirm from './GiveStuffComponents/GiveStuffConfirm';\r\nimport { connect } from 'react-redux';\r\n\r\nclass GiveStuff extends Component {\r\n    state = {\r\n        pageNr: 1\r\n    }\r\n\r\n    warningDescription = () => {\r\n        switch (this.props.pageNr) {\r\n            case 1:\r\n                return 'Uzupełnij szczegóły dotyczące Twoich rzeczy. Dzięki temu będziemy wiedzieć komu najlepiej je przekazać.'\r\n            case 2:\r\n                return 'Wszystkie rzeczy do oddania zapakuj w 60l worki. Dokładną instrukcję jak poprawnie spakować rzeczy znajdziesz TUTAJ.'\r\n            case 3:\r\n                return 'Jeśli wiesz komu chcesz pomóc, możesz wpisać nazwę tej organizacji w wyszukiwarce. Możesz też filtrować organizacje po ich lokalizacji bądź celu ich pomocy.'\r\n            case 4:\r\n                return 'Podaj adres oraz termin odbioru rzeczy.'\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    nextForm = () => {\r\n        switch (this.props.pageNr) {\r\n            case 1:\r\n                return <GiveStuffFirstForm />\r\n            case 2:\r\n                return <GiveStuffSecondForm />\r\n            case 3:\r\n                return <GiveStuffThirdForm />\r\n            case 4:\r\n                return <GiveStuffFourthForm />\r\n            case 5:\r\n                return <GiveStuffSummary />\r\n            case 6:\r\n                return <GiveStuffConfirm/>\r\n        }\r\n    }\r\n    currentStep = () => {\r\n        if (this.props.pageNr < 6)\r\n            return this.props.pageNr\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"giveStuff__container flex\">\r\n                <GiveStuffHeader />\r\n                {this.props.pageNr < 5 ?\r\n                    <div className=\"giveStuff__container__warning flex\">\r\n                        <h1>Ważne!</h1>\r\n                        {this.warningDescription()}\r\n                    </div> : \"\"\r\n                }\r\n                <div className=\"giveStuff__container__main flex\">\r\n                    {\r\n                        this.props.pageNr < 6 ? <p>Krok {this.currentStep()}/5</p> : \"\"\r\n                    }\r\n                    <div className=\"giveStuff__container__main__form\">\r\n                        {this.nextForm()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        pageNr: state.formsVal.pageNr\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,null)(GiveStuff);","import React from 'react';\r\nimport Home from './components/Home/Home';\r\nimport LogIn from './components/Registration/LogIn';\r\nimport Registry from './components/Registration/Registry';\r\nimport Logout from './components/Registration/Logout';\r\nimport GiveStuff from './components/GiveStuff/GiveStuff';\r\nimport {\r\n  HashRouter,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <HashRouter>\r\n        <>\r\n          <Switch>\r\n            <Route exact path='/' component={Home} />\r\n            <Route path='/logowanie' component={LogIn} />\r\n            <Route path='/rejestracja' component={Registry} />\r\n            <Route path='/wylogowano' component={Logout} />\r\n            <Route path='/oddajrzeczy' component={GiveStuff}/>\r\n          </Switch>\r\n        </>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/database';\r\nconst config = {\r\n    apiKey: \"AIzaSyBISq0SYH5YwDZ3GLgl9TVCxxMtW5qCnB4\",\r\n    authDomain: \"give-away-things.firebaseapp.com\",\r\n    databaseURL: \"https://give-away-things.firebaseio.com\",\r\n    projectId: \"give-away-things\",\r\n    storageBucket: \"give-away-things.appspot.com\",\r\n    messagingSenderId: \"522739826021\",\r\n    appId: \"1:522739826021:web:573c48970c8e076578358c\",\r\n    measurementId: \"G-BJPFQ0YE3P\"\r\n};\r\n\r\n  class Firebase { \r\n    constructor() {\r\n      app.initializeApp(config);\r\n      this.auth = app.auth();\r\n      this.db = app.database();\r\n    }\r\n    doCreateUserWithEmailAndPassword = (email, password) =>\r\n        this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n    doSignInWithEmailAndPassword = (email, password) =>\r\n        this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n    doSignOut = () => this.auth.signOut();\r\n\r\n    data = () => this.db.ref('foundations');\r\n  \r\n  }\r\n  export default Firebase;","import FirebaseContext, {withFirebase} from './context';\r\n\r\nimport Firebase from './firebase';\r\nexport default Firebase;\r\nexport { FirebaseContext, withFirebase };","import * as actionTypes from '../actions/actionsTypes';\r\n\r\nconst initialState = {\r\n    items: [],\r\n    currentPage: 1,\r\n    todosPerPage: 3,\r\n    currentTodos: [],\r\n    currentView: 0,\r\n    loadStatus: \"init\"\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_LIST:\r\n            const items = state.items.concat(action.items)\r\n            return{\r\n                ...state,\r\n                items,\r\n                loadStatus: action.loadStatus\r\n            }\r\n        case actionTypes.BUILD_LIST:\r\n            let indexOfLastTodo = state.currentPage * state.todosPerPage;\r\n            let indexOfFirstTodo = indexOfLastTodo - state.todosPerPage;\r\n            let currentTodos = items.slice(indexOfFirstTodo, indexOfLastTodo);\r\n                return {\r\n                    ...state,\r\n                    currentTodos:state.currentTodos.concat(currentTodos)\r\n                }\r\n        case actionTypes.ACTIVE_VIEW:\r\n            return {\r\n                ...state,\r\n                currentView: action.activeView\r\n            }\r\n        case actionTypes.BUILD_BUTTONS:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentButton\r\n            }\r\n        case actionTypes.FUNDATIONS_VIEW:\r\n            return {\r\n                ...state,\r\n                currentPage:action.currentPage\r\n            }\r\n        case actionTypes.ORGANIZATIONS_VIEW:\r\n            return {\r\n                ...state,\r\n                currentPage:action.currentPage\r\n            }\r\n        case actionTypes.COLLECTIONS_VIEW:\r\n            return {\r\n                ...state,\r\n                currentPage:action.currentPage\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionsTypes';\r\nconst initialState = {\r\n    status:\"\"\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n        switch(action.type){\r\n            case actionTypes.DATA_STATUS:\r\n                return {\r\n                    ...state,\r\n                    status:action.status\r\n                }\r\n            default :\r\n                return state;\r\n        }\r\n       \r\n\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionsTypes';\r\nconst initialState = {\r\n    regError:\"\"\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n        switch(action.type){\r\n            case actionTypes.REGISTRY_ERROR:\r\n                return {\r\n                    ...state,\r\n                    regError:action.regError\r\n                }\r\n            default :\r\n                return state;\r\n        }\r\n       \r\n\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionsTypes';\r\nconst initialState = {\r\n    logInError:\"\"\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n        switch(action.type){\r\n            case actionTypes.LOGIN_ERROR:\r\n                return {\r\n                    ...state,\r\n                    logInError:action.logInError\r\n                }\r\n            default :\r\n                return state;\r\n        }\r\n       \r\n\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionsTypes';\r\nconst initialState = {\r\n    authUser:null\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n        switch(action.type){\r\n            case actionTypes.LOGOUT_SUCCESS:\r\n                return {\r\n                    ...state,\r\n                    authUser:action.authUser\r\n                }\r\n            default :\r\n                return state;\r\n        }\r\n       \r\n\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionsTypes';\r\nconst initialState = {\r\n    firsFormValue:\"\",\r\n    secondFormValue:\"\",\r\n    active:false,\r\n    thirdFormValue:{},\r\n    fourthFormValue:[],\r\n    pageNr:1\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n        switch(action.type){\r\n            case actionTypes.FIRST_FORM_VALUE:\r\n                return {\r\n                    ...state,\r\n                    firsFormValue:action.firstFormValue\r\n                }\r\n            case actionTypes.SECOND_FORM_VALUE:\r\n                return {\r\n                    ...state,\r\n                    secondFormValue:action.secondFormValue\r\n                }\r\n            case actionTypes.TOGGLE_CLASS:\r\n                return {\r\n                    ...state,\r\n                    active:action.active\r\n                }\r\n            case actionTypes.THIRD_FORM_VALUE:\r\n                return {\r\n                    ...state,\r\n                    thirdFormValue: action.thirdFormValue\r\n                }\r\n           case actionTypes.FOURTH_FORM_VALUE:\r\n               return {\r\n                   ...state,\r\n                   fourthFormValue:state.fourthFormValue.concat(action.fourthFormValue)\r\n               }\r\n            case actionTypes.NEXT_PAGE:\r\n                return {\r\n                    ...state,\r\n                    pageNr:action.nextPage\r\n                }\r\n            case actionTypes.PREVIEW_PAGE:\r\n                return {\r\n                    ...state,\r\n                    pageNr:action.previewPage\r\n                }\r\n            default :\r\n                return state;\r\n        }\r\n}\r\n\r\nexport default reducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './scss/main.scss'\r\nimport Firebase, { FirebaseContext } from './components/Firebase/auth';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport pagination from './components/store/reducers/pagination';\r\nimport contact from './components/store/reducers/contact';\r\nimport registry from './components/store/reducers/registry';\r\nimport logIn from './components/store/reducers/logIn';\r\nimport logOut from './components/store/reducers/logOut';\r\nimport giveStuffForms from './components/store/reducers/giveStuffForms';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    pag: pagination,\r\n    con: contact,\r\n    reg: registry,\r\n    logIn:logIn,\r\n    logOut:logOut,\r\n    formsVal: giveStuffForms\r\n});\r\n\r\nconst logger = store => {\r\n    return next => {\r\n        return action => {\r\n            const result = next(action);\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger, thunk)));\r\n\r\n\r\nReactDOM.render\r\n    (\r\n        <Provider store={store}>\r\n            <FirebaseContext.Provider value={new Firebase()}>\r\n                <App />\r\n            </FirebaseContext.Provider>\r\n        </Provider>\r\n        , document.getElementById('root')\r\n    );\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}